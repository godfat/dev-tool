#!/bin/bash

# common PATH
export PATH=/usr/local/bin:/usr/local/sbin:$PATH

# node?
if test -d /usr/local/share/npm/bin; then
  export PATH=/usr/local/share/npm/bin:$PATH
fi

# cabal?
if test -d ~/.cabal/bin; then
  export PATH=~/.cabal/bin:$PATH
fi

# rust?
if test -d ~/.cargo/bin; then
  export PATH=~/.cargo/bin:$PATH
fi

# ruby?
rubies=$(ls -d ~/.gem/*/* 2> /dev/null | grep -E '([0-9]\.)+[0-9]$')
for path in $rubies ~
do
  if test -d "$path"; then
    export PATH=$path/bin:$PATH
  fi
done

# locale
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# other settings
export EDITOR=vim
export GEM_EDITOR=eit
export GEM_GREP=rg
export DISPLAY=:0
export FZF_DEFAULT_OPTS='-x'
GPG_TTY=$(tty)
export GPG_TTY

# start fishing...
if test "$(command -v fish 2> /dev/null)"; then
  stty=$(stty -g)
  fish # fish would mess up stty for bash
  stty "$stty"
fi

_git_branch_name(){
  command git rev-parse --abbrev-ref HEAD 2> /dev/null
}

_git_status_symbol(){
  git_status=$(git status --porcelain 2> /dev/null)
  if test -n "$git_status"; then
    # Is there anyway to preserve newlines so we can reuse $git_status?
    if git status --porcelain 2> /dev/null | grep '^.[^ ]' >/dev/null; then
      echo '*' # dirty
    else
      echo '#' # all staged
    fi
  else
    echo    '' # clean
  fi
}

_remote_hostname(){
  if test -n "$SSH_CONNECTION"; then
    echo "$(whoami)@$(hostname) "
  fi
}

bash_prompt(){
  cyan=$(printf '\[\e[36m\]')
  normal=$(printf '\[\e[0m\]')

  time=$(printf '\[\e[0m\]')
  remote=$(printf '\[\e[0m\]')

  if echo "$TERM" | grep 256 >/dev/null; then
    time=$(printf '\[\e[38;5;102m\]')
    remote=$(printf '\[\e[38;5;22m\]')
  fi

  # stolen from https://github.com/fish-shell/fish-shell/blob/master/share/functions/prompt_pwd.fish
  cwd=$(printf '\[\e[32m\]')$(echo "$PWD" | sed -e "\|^$HOME[^/]|! s|^$HOME|~|" -e 's-\([^/.]\)[^/]*/-\1/-g')
  git_status=
  git_branch=$(_git_branch_name)
  git_hide_branch=$(git config --get prompt.hide 2>/dev/null)

  if test -n "$git_branch"; then
    if test -n "$git_hide_branch"; then
      git_status=$(_git_status_symbol)
    else
      git_status=" $(_git_status_symbol)$(_git_branch_name)"
    fi
  else
    git_status=''
  fi

  time=$time$(date '+%H:%M')
  remote=$remote$(_remote_hostname)

  PS1="$time $remote$cwd$cyan$git_status$normal$ "
}
export PROMPT_COMMAND=bash_prompt

# probably should be inside .bashrc?
# linux bash specific
if   test "$(uname)" = 'Linux'; then
  alias ls='ls --color'
  alias ll='ls -l'
  alias la='ll -a'
# mac bash specific
elif test "$(uname)" = 'Darwin'; then
  alias ls='ls -Gw'
  alias ll='ls -lhw'
  alias la='ll -a'
fi
